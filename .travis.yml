dist: xenial
os: linux
language: cpp

services:
  - docker
env:
  global:
    - IMAGE_NAME=vglad/centos8:gcc9
    - PROJECT_NAME=ProjectTemplate
    - PROJECT_DIR=/opt/${PROJECT_NAME}
    - BUILD_SCRIPT_NAME=build.sh

#install:
#  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
#  - mkdir ${DEPS_DIR}
#  - cd ${DEPS_DIR}
#  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.5-Linux-x86_64.tar.gz
#
#  # extract the binaries; the output here is quite lengthy,
#  # so we swallow it to not clutter up the travis console
#  - tar -xvf cmake-3.16.5-Linux-x86_64.tar.gz > /dev/null
#  - mv cmake-3.16.5-Linux-x86_64 cmake-install
#
#  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
#  - cd ${TRAVIS_BUILD_DIR}


before_script:
  - docker pull "$IMAGE_NAME" || true

script:
  - docker run -t
      -e PROJECT_DIR=${PROJECT_DIR}
      -v ${TRAVIS_BUILD_DIR}:${PROJECT_DIR}
      "${IMAGE_NAME}" ${PROJECT_DIR}/${BUILD_SCRIPT_NAME}

after_script:
#  - docker images



#before_script:
#  - mkdir build
#  - cd build
#
#   run cmake; we assume that the project's
#   top-level CMakeLists.txt is located at '..'
#    - cmake ..

#script:
#  - mkdir build
#  -
##  - wget https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.bz2
##  - tar xf boost_1_72_0.tar.bz2
#  - cd build
#  - cmake -DCMAKE_CXX_COMPILER=/usr/bin/g++-9 -DCMAKE_C_COMPILER=/usr/bin/gcc-9 ..
#  - make
##  - cmake -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang ..
##  - cmake --build . -- -j 4
